INFO: Seed: 3849829767
INFO: Loaded 1 modules   (303 inline 8-bit counters): 303 [0x5af2e0, 0x5af40f),
INFO: Loaded 1 PC tables (303 PCs): 303 [0x5714c8,0x5727b8),
INFO:       16 files found in ../seeds/
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: seed corpus: files: 16 min: 1b max: 1070b total: 2364b rss: 27Mb

=================================================================
==1295==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 20 byte(s) in 1 object(s) allocated from:
    #0 0x51e25d in malloc (/src/libfuzzer/fuzzer_load_png+0x51e25d)
    #1 0x550cbf in load_png /src/libfuzzer/pngparser.c:566:65
    #2 0x54da57 in LLVMFuzzerTestOneInput /src/libfuzzer/fuzzer_load_png.c:15:7
    #3 0x4586f1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/src/libfuzzer/fuzzer_load_png+0x4586f1)
    #4 0x457e35 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/src/libfuzzer/fuzzer_load_png+0x457e35)
    #5 0x45a757 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_load_png+0x45a757)
    #6 0x45aab9 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_load_png+0x45aab9)
    #7 0x44978e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/src/libfuzzer/fuzzer_load_png+0x44978e)
    #8 0x4725d2 in main (/src/libfuzzer/fuzzer_load_png+0x4725d2)
    #9 0x7fd66c88d0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x240b2)

Direct leak of 13 byte(s) in 1 object(s) allocated from:
    #0 0x51e25d in malloc (/src/libfuzzer/fuzzer_load_png+0x51e25d)
    #1 0x54e7ee in read_png_chunk /src/libfuzzer/pngparser.c:239:25
    #2 0x5505e5 in load_png /src/libfuzzer/pngparser.c:566:11
    #3 0x54da57 in LLVMFuzzerTestOneInput /src/libfuzzer/fuzzer_load_png.c:15:7
    #4 0x4586f1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/src/libfuzzer/fuzzer_load_png+0x4586f1)
    #5 0x457e35 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/src/libfuzzer/fuzzer_load_png+0x457e35)
    #6 0x45a757 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_load_png+0x45a757)
    #7 0x45aab9 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_load_png+0x45aab9)
    #8 0x44978e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/src/libfuzzer/fuzzer_load_png+0x44978e)
    #9 0x4725d2 in main (/src/libfuzzer/fuzzer_load_png+0x4725d2)
    #10 0x7fd66c88d0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x240b2)

Direct leak of 6 byte(s) in 1 object(s) allocated from:
    #0 0x51e25d in malloc (/src/libfuzzer/fuzzer_load_png+0x51e25d)
    #1 0x54e7ee in read_png_chunk /src/libfuzzer/pngparser.c:239:25
    #2 0x550cce in load_png /src/libfuzzer/pngparser.c:566:11
    #3 0x54da57 in LLVMFuzzerTestOneInput /src/libfuzzer/fuzzer_load_png.c:15:7
    #4 0x4586f1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/src/libfuzzer/fuzzer_load_png+0x4586f1)
    #5 0x457e35 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/src/libfuzzer/fuzzer_load_png+0x457e35)
    #6 0x45a757 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_load_png+0x45a757)
    #7 0x45aab9 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_load_png+0x45aab9)
    #8 0x44978e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/src/libfuzzer/fuzzer_load_png+0x44978e)
    #9 0x4725d2 in main (/src/libfuzzer/fuzzer_load_png+0x4725d2)
    #10 0x7fd66c88d0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x240b2)

SUMMARY: AddressSanitizer: 39 byte(s) leaked in 3 allocation(s).

INFO: a leak has been found in the initial corpus.

INFO: to ignore leaks on libFuzzer side use -detect_leaks=0.

MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./leak-432302a2a85f1fb5cedbc89b9bd1f406350e1fc0