INFO: Seed: 2887615905
INFO: Loaded 1 modules   (318 inline 8-bit counters): 318 [0x5af2a0, 0x5af3de),
INFO: Loaded 1 PC tables (318 PCs): 318 [0x571468,0x572848),
INFO:       18 files found in ../seeds/
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: seed corpus: files: 18 min: 1b max: 1070b total: 3164b rss: 27Mb

=================================================================
==235==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 410 byte(s) in 1 object(s) allocated from:
    #0 0x51e25d in malloc (/src/libfuzzer/fuzzer_store_png_rgba+0x51e25d)
    #1 0x553ca6 in store_idat_rgb_alpha /src/libfuzzer/pngparser.c:929:33
    #2 0x55697b in store_png_rgb_alpha /src/libfuzzer/pngparser.c:1011:3
    #3 0x55697b in store_png /src/libfuzzer/pngparser.c:1074:5
    #4 0x54daa0 in LLVMFuzzerTestOneInput /src/libfuzzer/fuzzer_store_png_rgba.c:35:5
    #5 0x4586f1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/src/libfuzzer/fuzzer_store_png_rgba+0x4586f1)
    #6 0x457e35 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/src/libfuzzer/fuzzer_store_png_rgba+0x457e35)
    #7 0x45a757 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_store_png_rgba+0x45a757)
    #8 0x45aab9 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_store_png_rgba+0x45aab9)
    #9 0x44978e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/src/libfuzzer/fuzzer_store_png_rgba+0x44978e)
    #10 0x4725d2 in main (/src/libfuzzer/fuzzer_store_png_rgba+0x4725d2)
    #11 0x7f0fb09450b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x240b2)

Direct leak of 130 byte(s) in 1 object(s) allocated from:
    #0 0x51e579 in realloc (/src/libfuzzer/fuzzer_store_png_rgba+0x51e579)
    #1 0x5533bc in compress_png_data /src/libfuzzer/pngparser.c:893:24
    #2 0x554138 in store_idat_rgb_alpha /src/libfuzzer/pngparser.c:947:3
    #3 0x55697b in store_png_rgb_alpha /src/libfuzzer/pngparser.c:1011:3
    #4 0x55697b in store_png /src/libfuzzer/pngparser.c:1074:5
    #5 0x54daa0 in LLVMFuzzerTestOneInput /src/libfuzzer/fuzzer_store_png_rgba.c:35:5
    #6 0x4586f1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/src/libfuzzer/fuzzer_store_png_rgba+0x4586f1)
    #7 0x457e35 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/src/libfuzzer/fuzzer_store_png_rgba+0x457e35)
    #8 0x45a757 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_store_png_rgba+0x45a757)
    #9 0x45aab9 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/src/libfuzzer/fuzzer_store_png_rgba+0x45aab9)
    #10 0x44978e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/src/libfuzzer/fuzzer_store_png_rgba+0x44978e)
    #11 0x4725d2 in main (/src/libfuzzer/fuzzer_store_png_rgba+0x4725d2)
    #12 0x7f0fb09450b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x240b2)

SUMMARY: AddressSanitizer: 540 byte(s) leaked in 2 allocation(s).

INFO: a leak has been found in the initial corpus.

INFO: to ignore leaks on libFuzzer side use -detect_leaks=0.

MS: 0 ; base unit: 0000000000000000000000000000000000000000
artifact_prefix='./'; Test unit written to ./leak-ed27465e33a30fe483ba561cbe9348528775ec67
